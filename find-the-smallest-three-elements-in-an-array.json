{
  "slug": "find-the-smallest-three-elements-in-an-array",
  "title": "Find The Smallest Three Elements In An Array",
  "c": "#include <stdio.h>\n\nvoid findSmallestThree(int ARay[], int thingy)\n{\n    if (thingy < 3)\n    {\n        printf(\"ERROR! Input Array Size < 3\\n\");\n        return;\n    }\n\n    int first, second, third;\n\n    first = second = third = ARay[0];\n\n    for (int i = 1; i < thingy; i++)\n    {\n        if (ARay[i] < first)\n        {\n            third = second;\n            second = first;\n            first = ARay[i];\n        }\n        else if (ARay[i] < second)\n        {\n            third = second;\n            second = ARay[i];\n        }\n        else if (ARay[i] < third)\n        {\n            third = ARay[i];\n        }\n    }\n\n    printf(\"The smallest three elements: %d %d %d\\n\", first, second, third);\n}\n\nint main()\n{\n    int ARay[] = { 10, 4, 3, 50, 23, 90 };\n    int thing = sizeof(ARay) / sizeof(ARay[0]);\n    findSmallestThree(ARay, thing);\n\n    int ARay2[] = { 12, 13, 1, 10, 34, 1 };\n    int thing2 = sizeof(ARay2) / sizeof(ARay2[0]);\n    findSmallestThree(ARay2, thing2);\n\n    return 0;\n}\n\n/* Cautiously Crafted By Redzwinger */",
  "c-plus-plus": "#include <iostream>\n#include <algorithm>\nusing namespace std;\n\nvoid findSmallestThree(int arr[],int size){\n\n\nsort(arr,arr + size);\n\nfor (int i = 0; i < min(size, 3); ++i) {\n    cout << arr[i] << \" \";\n}\n}\n\nint main(){\n\nint arr[]= { 10, 4, 3, 50, 23, 90};//example used\nint size = sizeof(arr) / sizeof(arr[0]);\nfindSmallestThree(arr, size);\n\nreturn 0;\n\n\n\n}",
  "java": "import java.util.Arrays;\n\nclass SmallestThreeNumbers {\n    public static void main(String[] args) {\n        // Example array of numbers\n        int[] arr = {10, 4, 3, 50, 23, 90};\n\n        // Find and print the smallest three numbers\n        int[] smallestThree = findSmallestThreeElementsInAnArray(arr);\n        if(arr.length >= 3 ) {\n            System.out.println(\"Smallest three numbers: \" + Arrays.toString(smallestThree));\n        }\n    }\n\n    public static int[] findSmallestThreeElementsInAnArray(int[] arr) {\n        if (arr.length < 3) {\n            System.out.println(\"Array size should be at least 3\");\n            return null;\n        }\n        else if (arr.length == 3){\n            return arr;\n        }\n        // Create a temporary array so the original stays unaffected\n        int[] tempArray = Arrays.copyOf(arr, arr.length);\n\n        // Sort the new array in ascending order\n        Arrays.sort(tempArray);\n\n        // Create a new array to store the smallest three numbers\n        int[] smallestThree = new int[3];\n        for (int i = 0; i < 3; i++) {\n            smallestThree[i] = tempArray[i];\n        }\n\n        return smallestThree;\n    }\n}\n",
  "javascript": "//Write a JavaScript program to find the smallest three elements in an array\n// Input  : arr[] = {10, 4, 3, 50, 23, 90}\n// Output : 3 4 10\n\n// Input  : arr[] = {12, 13, 1, 10, 34, 1}\n// Output : 1 1 10\n\n\nlet array = [10, 4, 3, 50, 23, 90]\n\nfunction threeSmallElements(num) {\n    num.sort((a,b) => Math.min(a - b))\n    return num.slice(0, 3)\n}\n\nconsole.log('the answer is', threeSmallElements(array));",
  "kotlin": "fun main() {\n    val threeSmallestElements = threeSmallestElements(arrayOf(12, 13, 1, 10, 34, 1))\n    println(threeSmallestElements)\n}\n\nfun threeSmallestElements(array: Array<Int>): Array<Int> {\n    return if (array.size < 3) {\n        emptyArray()\n    } else {\n        val sortedArray = array.sortedArray()\n        sortedArray.sliceArray(0..2)\n    }\n}\n",
  "typescript": "function findSmallestThreeElements(arr: number[]): number[] {\n    if (arr.length < 3) {\n        throw new Error(\"Array should have at least three elements\");\n    }\n\n    const sortedArray = arr.slice().sort((a, b) => a - b);\n\n    return sortedArray.slice(0, 3);\n}\n\n// Example usage\nconst example_input_array = [10, 5, 8, 2, 7, 1, 3];\nconst output_array = findSmallestThreeElements(example_input_array);\nconsole.log(\"Smallest three elements:\", output_array);",
  "description": "\n## Write a program to find the smallest three elements in an array\n\n```txt\r\nInput  : arr[] = {10, 4, 3, 50, 23, 90}\r\nOutput : 3 4 10\r\n\r\nInput  : arr[] = {12, 13, 1, 10, 34, 1}\r\nOutput : 1 1 10\r\n```\n\n---\n",
  "trackId": 5222,
  "lastUpdated": "2024-01-16T08:21:32Z",
  "contributors": [
    "joenjogu",
    "Redzwinger",
    "harshraj8843",
    "dimitris1208",
    "mktana",
    "CoffeeFrog101",
    "Amedi-Imbira",
    "zackbmz",
    "Shivamk034"
  ],
  "php": "<?php\n// ready to execute\nfunction findSmallestThree($arr) {\n// Sort the array in ascending order\nsort($arr);\n\n$smallestThree = array_slice($arr, 0, 3);\n\n// Print the result\necho \"Smallest three elements: \" . implode(' ', $smallestThree);\n}\n\n// Test cases\n$arr1 = array(10, 4, 3, 50, 23, 90);\n$arr2 = array(12, 13, 1, 10, 34, 1);\n\necho \"Input 1: \" . implode(' ', $arr1) . \"\\n\";\nfindSmallestThree($arr1);\n\necho \"\\n\\n\";\n\necho \"Input 2: \" . implode(' ', $arr2) . \"\\n\";\nfindSmallestThree($arr2);\n?>",
  "python": "def main():\n      seq = [12, 13, 1, 10, 34, 1]\n      print(smallest_three_elements(seq))\n\ndef smallest_three_elements(S):\n      \"\"\" Return the three smallest elements of sequence S \"\"\"\n      min1 = S[0]\n      min2 = S[0]\n      min3 = S[0]\n      \n      for val in S:\n            if val < min1:\n                  min3 = min2\n                  min2 = min1\n                  min1 = val\n            elif val < min2:\n                  min3 = min2\n                  min2 = val\n            elif val < min3:\n                  min3 = val\n      return (min1, min2, min3)\n\nif __name__ == '__main__':\n      main()",
  "languages": [
    "c",
    "c-plus-plus",
    "java",
    "javascript",
    "kotlin",
    "typescript",
    "php",
    "python"
  ]
}