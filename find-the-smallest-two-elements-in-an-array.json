{
  "slug": "find-the-smallest-two-elements-in-an-array",
  "title": "Find The Smallest Two Elements In An Array",
  "c": "#include <stdio.h>\n#include <stdlib.h>\n\n// Function to compare elements for qsort\nint compare(const void * a, const void * b) {\n    return (*(int*)a - *(int*)b);\n}\n\n// Function to find and print the smallest two elements\nvoid findSmallestTwo(int arr[], int size) {\n    // Sort the array\n    qsort(arr, size, sizeof(int), compare);\n\n    // Print the first two elements\n    printf(\"Smallest two elements: %d %d\\n\", arr[0], arr[1]);\n}\n\nint main() {\n    int arr1[] = {12, 13, 1, 10, 34, 1};\n    int size1 = sizeof(arr1) / sizeof(arr1[0]);\n\n    printf(\"Input 1: \");\n    for (int i = 0; i < size1; i++) {\n        printf(\"%d \", arr1[i]);\n    }\n    printf(\"\\n\");\n    findSmallestTwo(arr1, size1);\n\n    printf(\"\\n\");\n\n    int arr2[] = {10, 5, 10};\n    int size2 = sizeof(arr2) / sizeof(arr2[0]);\n\n    printf(\"Input 2: \");\n    for (int i = 0; i < size2; i++) {\n        printf(\"%d \", arr2[i]);\n    }\n    printf(\"\\n\");\n    findSmallestTwo(arr2, size2);\n\n    return 0;\n}\n",
  "c-sharp": "using System;\n\nclass Program\n{\n    static void FindSmallestTwoElements(int[] arr)\n    {\n        if (arr.Length < 2)\n        {\n            Console.WriteLine(\"Array should have at least two elements.\");\n            return;\n        }\n\n        int smallest = int.MaxValue;\n        int secondSmallest = int.MaxValue;\n\n        foreach (int num in arr)\n        {\n            if (num < smallest)\n            {\n                secondSmallest = smallest;\n                smallest = num;\n            }\n            else if (num < secondSmallest && num != smallest)\n            {\n                secondSmallest = num;\n            }\n        }\n\n        Console.WriteLine($\"Smallest Two Elements: {smallest} {secondSmallest}\");\n    }\n\n    static void Main()\n    {\n        int[] arr1 = { 12, 13, 1, 10, 34, 1 };\n        FindSmallestTwoElements(arr1);\n\n        int[] arr2 = { 10, 5, 10 };\n        FindSmallestTwoElements(arr2);\n    }\n}\n",
  "java": "import java.util.Arrays;\n\npublic class Main {\n    // Function to find and print the smallest two elements\n    public static void findSmallestTwo(int[] arr) {\n        // Sort the array\n        Arrays.sort(arr);\n\n        // Print the first two elements\n        System.out.println(\"Smallest two elements: \" + arr[0] + \" \" + arr[1]);\n    }\n\n    public static void main(String[] args) {\n        int[] arr1 = {12, 13, 1, 10, 34, 1};\n        System.out.print(\"Input 1: \");\n        for (int value : arr1) {\n            System.out.print(value + \" \");\n        }\n        System.out.println();\n        findSmallestTwo(arr1);\n\n        System.out.println();\n\n        int[] arr2 = {10, 5, 10};\n        System.out.print(\"Input 2: \");\n        for (int value : arr2) {\n            System.out.print(value + \" \");\n        }\n        System.out.println();\n        findSmallestTwo(arr2);\n    }\n}\n",
  "javascript": "function findTheSmallestTwoElementsInAnArray(arr) {\n    arr.sort((a, b) => a - b);\n    return arr.slice(0, 2);\n}\n\nconsole.log(findTheSmallestTwoElementsInAnArray([12, 13, 1, 10, 34, 1]));\nconsole.log(findTheSmallestTwoElementsInAnArray([10, 5, 10]));\n",
  "typescript": "function findTheSmallestTwoElements(arr: number[]): number[] {\n  if (arr.length < 2) {\n    throw new Error(\"Array should have at least two elemnts.\")\n  }\n\n  const sortedArr = arr.slice().sort((a,b) => a - b);\n  return sortedArr.slice(0, 2);\n}\n\nconst numbers = [5, 2, 8, 1, 7, 3];\nconst smallestTwo = findTheSmallestTwoElements(numbers);\n\nconsole.log(\"Original Array:\", numbers);\nconsole.log(\"Smallest Two Elements:\", smallestTwo);",
  "description": "\n## Write a program to find the smallest two elements in an array\n\n```txt\r\nInput  : arr[] = {12, 13, 1, 10, 34, 1}\r\nOutput : 1 1\r\n\r\nInput  : arr[] = {10, 5, 10}\r\nOutput : 5 10\r\n```\n\n---\n",
  "trackId": 5068,
  "lastUpdated": "2024-01-14T15:06:18Z",
  "contributors": [
    "harshraj8843",
    "zackbmz",
    "Parvezkhan0",
    "jcmlumacad1",
    "Amedi-Imbira",
    "hamzambo",
    "AdeosunDeji"
  ],
  "php": "<?php\nfunction findSmallestTwo($arr) {\n    // Sort the array in ascending order\n    sort($arr);\n\n    // Get the first two elements\n    $smallestTwo = array_slice($arr, 0, 2);\n\n    // Print the result\n    echo \"Smallest two elements: \" . implode(' ', $smallestTwo) . \"\\n\";\n}\n\n// Test cases\n$arr1 = array(12, 13, 1, 10, 34, 1);\n$arr2 = array(10, 5, 10);\n\necho \"Input 1: \" . implode(' ', $arr1) . \"\\n\";\nfindSmallestTwo($arr1);\n\necho \"\\n\";\n\necho \"Input 2: \" . implode(' ', $arr2) . \"\\n\";\nfindSmallestTwo($arr2);\n?>\n",
  "python": "def main():\n      \"\"\"\n            Return the two smallest elements from a nonempty Python list (array)\n            1. Sort the array\n            2. Return the first two elements from the sorted array\n            \n            Asymptotic analsis\n            By sorting the sequence of the elements, elements will be placed next to each other. Therefore\n            1. built in function sorted guarantees a worst case running time of O(n log n)\n            2. return tuple assignment is in constant time O(1)\n            \n      \"\"\"\n      seq = [12, 13, 1, 10, 34]                                                # Test with various sequences\n      \n      smallest, second_smallest = find_two_smallest_elements(seq)             #unpacking tuple\n      print(f'Smallest: {smallest} || Second smallest: {second_smallest}')\n\ndef find_two_smallest_elements(S):\n      S_sorted = sorted(S)\n      \n      return (S_sorted[0], S_sorted[1])                                       # Return in tuple form\n\nif __name__ == '__main__':\n      main()",
  "r": "findSmallestTwo <- function(arr) {\n  n <- length(arr)\n  \n  if (n < 2) {\n    print(\"Array should have at least two elements.\")\n    return(NULL)\n  }\n  \n  # Sort the array in ascending order\n  arr <- sort(arr)\n  \n  # Output the first two elements\n  cat(\"Smallest two elements:\", arr[1], arr[2], \"\\n\")\n}\n\n# Example usage:\narr1 <- c(12, 13, 1, 10, 34, 1)\nfindSmallestTwo(arr1)\n\narr2 <- c(10, 5, 10)\nfindSmallestTwo(arr2)\n",
  "languages": [
    "c",
    "c-sharp",
    "java",
    "javascript",
    "typescript",
    "php",
    "python",
    "r"
  ]
}